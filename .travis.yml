language: cpp
compiler:
  - clang
  - gcc
os:
  - linux
env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "CwhSj6NvaLnzxGe5jFUMonTK4XvXQNcxab67rLJAifRW7k6yMrzST8CP89J3AjfjBWd+NudmhSKqNdA3gzAxlAqqoVMlpkI3cufKP0RUAdJRC572zIPcoJxr322bpXl5PrwQ+jV6b5BzugqXAoeAJlVYY47OddlRyOXaDe92cUS2ZIxov/C/8QNXRZ0Ap8MvYBmLDct9wf/qoP9A2U7K7qErG16YQw40V5xfRfvA5x4JLkOjxYyi9o0fKnw4cRlBYFwSzFgzWIz8zvYOYZ9FJbrPbCfORoaVC9jRj2JCFSydV83OvesmAKyrCLyqmTQTdsTEoywbc0sbgESK3UeqlnBFFwj9Red4FLTg3kVZZAX6RzY7va9Xai7kuIXOSCeoH2kkj+Mc7pap5XvqAnOq2WpklEp+rITiUDR5aT/uSatLnjE43io0r1bH5NUN8PcMGedaJvA9soxN9E8gZCDumH4ZbmnNQPoMvPnu2kYTg9EcMRNr8E5pLg7OVc5IO30LS+cilmnLlCQ4wh6hNsWRTZ6CJDRrIf6Z14Xu4NFoHOCNIO1PoVaVf+N0IyZd3h0qw4tGIPi6Q/qi6W1YCFXa7r084mT+J/xyU1z0S4xw0AO417kT1e3vkm6L5ae/5H7aGCb03/g4YIEiv3I3ZJ6oN79uPNFvT/ZDiHYdNmSULXY="
addons:
 apt:
   update: true
   sources:
   - ubuntu-toolchain-r-test
   - llvm-toolchain-trusty-6.0
   packages:
   - clang-6.0
   - gcc-7
   - g++-7
   - binutils-2.26
   - cmake
   - doxygen
   - python-pip
   - libc6-dbg  # needed by Valgrind
   - valgrind
   - ggcov
   - lcov
   - curl
 coverity_scan:
  project:
      name: "abbyssoul/libsolace"
      description: "Foundation of High Reliability/High Performance Applications"
  notification_email: abbyssoul@gmail.com
  build_command: make
  branch_pattern: coverity_scan

before_install:
  - pip install --user cpp-coveralls
  - pip install --user cpplint
  - gem install coveralls-lcov
install:
  - gcov --version
  - lcov --version
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 90 --slave /usr/bin/g++ g++ /usr/bin/g++-7
  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-7 90
  - if [ "$CXX" = "clang++" ]; then export CXX="clang++-6.0" CC="clang-6.0"; fi
  - echo $CXX
  - $CXX --version
  - ld --version

script:
  - ./configure --enable-sanitizer
  - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then make clean codecheck; fi
  - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then make -j2 test; fi
  - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then ./configure --disable-sanitizer --enable-debug && make clean && make verify ; fi

after_success:
  - make clean coverage_report
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
  - coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info  # uploads to coveralls
